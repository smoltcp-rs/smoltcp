language: rust
matrix:
  include:
    ### Litmus check that we work on stable/beta
    # (we don't, not until slice_rotate lands)
    # - rust: stable
    #   env: FEATURES='default' MODE='test'
    # - rust: beta
    #   env: FEATURES='default' MODE='test'
    ### Test default configurations
    - rust: nightly
      env: FEATURES='default' MODE='test'
    ### Test select feature permutations, chosen to be as orthogonal as possible
    - rust: nightly
      env: FEATURES='std phy-raw_socket proto-ipv6 socket-udp' MODE='test'
    - rust: nightly
      env: FEATURES='std phy-tap_interface proto-ipv6 socket-udp' MODE='test'
    - rust: nightly
      env: FEATURES='std proto-ipv4 socket-raw' MODE='test'
    - rust: nightly
      env: FEATURES='std proto-ipv6 socket-udp' MODE='test'
    - rust: nightly
      env: FEATURES='std proto-ipv6 socket-tcp' MODE='test'
    - rust: nightly
      env: FEATURES='std proto-ipv4 socket-icmp socket-tcp' MODE='test'
    - rust: nightly
      env: FEATURES='std proto-ipv6 socket-icmp socket-tcp' MODE='test'
    ### Test select feature permutations, chosen to be as aggressive as possible
    - rust: nightly
      env: FEATURES='proto-ipv4 proto-ipv6 socket-raw socket-udp socket-tcp socket-icmp std'
        MODE='test'
    - rust: nightly
      env: FEATURES='proto-ipv4 proto-ipv6 socket-raw socket-udp socket-tcp socket-icmp alloc'
        MODE='test'
    - rust: nightly
      env: FEATURES='proto-ipv4 proto-ipv6 socket-raw socket-udp socket-tcp socket-icmp'
        MODE='build'
script:
  - cargo "$MODE" --no-default-features --features "$FEATURES"
notifications:
  irc:
    channels:
      - "chat.freenode.net#m-labs"
    use_notice: true
    skip_join: true
